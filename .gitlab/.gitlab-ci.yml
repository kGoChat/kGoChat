image: golang:latest

variables:
  REPO: github.com
  GROUP: kekxv
  PROJECT: kGoChat
  # Please edit to your GitLab project
  REPO_NAME: github.com/kekxv/kGoChat

cache:
  key: ${CI_COMMIT_REF_NAME}
  paths:
    - node_modules/
    - k-go-chat-vue/node_modules/

# The problem is that to be able to use go get, one needs to put
# the repository in the $GOPATH. So for example if your gitlab domain
# is gitlab.com, and that your repository is namespace/project, and
# the default GOPATH being /go, then you'd need to have your
# repository in /go/src/gitlab.com/namespace/project
# Thus, making a symbolic link corrects this.
before_script:
  - mkdir -p $GOPATH/src/$(dirname $REPO_NAME)
  - ln -svf $CI_PROJECT_DIR $GOPATH/src/$REPO_NAME
  - cd $GOPATH/src/$REPO_NAME
  - git submodule sync --recursive
  - git submodule update --init --recursive
  - go get -u github.com/shuLhan/go-bindata/...
  - go-bindata ./public/...

stages:
  - test
  - build
  - build-web
  - deploy

format:
  stage: test
  script:
    - go fmt $(go list ./... | grep -v /vendor/)
    - go vet $(go list ./... | grep -v /vendor/)
    - go test -race $(go list ./... | grep -v /vendor/)

compile:
  stage: build
  script:
    - go build -race -ldflags "-extldflags '-static'" -o $CI_PROJECT_DIR/kGoChat
  artifacts:
    paths:
      - kGoChat


job-build-web:
  stage: build-web
  only:
    - master

  script:
    - cd k-go-chat-vue
    - npm set registry https://registry.npm.taobao.org
    - npm install --progress=false
    - npm run build
  artifacts:
    expire_in: 1 week
    paths:
      - public
